1c1
< /* Simulator instruction semantics for aapbf.
---
> /* Simulator instruction semantics for aapbf16.

190,191c178,179
< #if WITH_SCACHE_PBB_AAPBF
<     aapbf_pbb_after (current_cpu, sem_arg);
---
> #if WITH_SCACHE_PBB_AAPBF16
>     aapbf16_pbb_after (current_cpu, sem_arg);
209,210c197,198
< #if WITH_SCACHE_PBB_AAPBF
<     aapbf_pbb_before (current_cpu, sem_arg);
---
> #if WITH_SCACHE_PBB_AAPBF16
>     aapbf16_pbb_before (current_cpu, sem_arg);
228c216
< #if WITH_SCACHE_PBB_AAPBF
---
> #if WITH_SCACHE_PBB_AAPBF16
230c218
<     vpc = aapbf_pbb_cti_chain (current_cpu, sem_arg,
---
>     vpc = aapbf16_pbb_cti_chain (current_cpu, sem_arg,
235c223
<     vpc = aapbf_pbb_cti_chain (current_cpu, sem_arg,
---
>     vpc = aapbf16_pbb_cti_chain (current_cpu, sem_arg,
256,257c244,245
< #if WITH_SCACHE_PBB_AAPBF
<     vpc = aapbf_pbb_chain (current_cpu, sem_arg);
---
> #if WITH_SCACHE_PBB_AAPBF16
>     vpc = aapbf16_pbb_chain (current_cpu, sem_arg);
278c266
< #if WITH_SCACHE_PBB_AAPBF
---
> #if WITH_SCACHE_PBB_AAPBF16
282c270
<     vpc = aapbf_pbb_begin (current_cpu, FAST_P);
---
>     vpc = aapbf16_pbb_begin (current_cpu, FAST_P);
285c273
<     vpc = aapbf_pbb_begin (current_cpu, STATE_RUN_FAST_P (CPU_STATE (current_cpu)));
---
>     vpc = aapbf16_pbb_begin (current_cpu, STATE_RUN_FAST_P (CPU_STATE (current_cpu)));
287c275
<     vpc = aapbf_pbb_begin (current_cpu, 0);
---
>     vpc = aapbf16_pbb_begin (current_cpu, 0);
297c285
<   CASE (sem, INSN_L_ADD32) : /* l.add32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_ADD) : /* l.add ${xdest},${xsrc1},${xsrc2} */
301c289
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
304c292
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
307,346c295,296
<     USI opval = ADDSI (* FLD (i_a6), * FLD (i_b6));
<     * FLD (i_d6) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_SUB32) : /* l.sub32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = SUBSI (* FLD (i_a6), * FLD (i_b6));
<     * FLD (i_d6) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_AND32) : /* l.and32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ANDSI (* FLD (i_a6), * FLD (i_b6));
<     * FLD (i_d6) = opval;
---
>     USI opval = ADDSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
354c304
<   CASE (sem, INSN_L_OR32) : /* l.or32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_SUB) : /* l.sub ${xdest},${xsrc1},${xsrc2} */
358c308
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
361c311
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
364,365c314,315
<     USI opval = ORSI (* FLD (i_a6), * FLD (i_b6));
<     * FLD (i_d6) = opval;
---
>     USI opval = SUBSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
373c323
<   CASE (sem, INSN_L_XOR32) : /* l.xor32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_AND) : /* l.and ${xdest},${xsrc1},${xsrc2} */
377c327
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
380c330
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
383,384c333,334
<     USI opval = XORSI (* FLD (i_a6), * FLD (i_b6));
<     * FLD (i_d6) = opval;
---
>     USI opval = ANDSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
392c342
<   CASE (sem, INSN_L_ASR32) : /* l.asr32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_OR) : /* l.or ${xdest},${xsrc1},${xsrc2} */
396c346
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
399c349
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
402,403c352,353
<     USI opval = SRLSI (ORSI (* FLD (i_a6), SLLBI (CPU (h_cf), 16)), * FLD (i_b6));
<     * FLD (i_d6) = opval;
---
>     USI opval = ORSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
411c361
<   CASE (sem, INSN_L_LSL32) : /* l.lsl32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_XOR) : /* l.xor ${xdest},${xsrc1},${xsrc2} */
415c365
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
418c368
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
421,422c371,372
<     USI opval = SLLSI (* FLD (i_a6), * FLD (i_b6));
<     * FLD (i_d6) = opval;
---
>     USI opval = XORSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
430c380
<   CASE (sem, INSN_L_LSR32) : /* l.lsr32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_ASR) : /* l.asr ${xdest},${xsrc1},${xsrc2} */
434c384
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
437c387
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
440,441c390,391
<     USI opval = SRLSI (* FLD (i_a6), * FLD (i_b6));
<     * FLD (i_d6) = opval;
---
>     USI opval = SRLSI (ORSI (* FLD (i_xsrc1), SLLBI (CPU (h_cf), 16)), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
449c399
<   CASE (sem, INSN_L_MOV32) : /* l.mov32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_LSL) : /* l.lsl ${xdest},${xsrc1},${xsrc2} */
453c403
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
456c406
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
459,460c409,410
<     USI opval = * FLD (i_a6);
<     * FLD (i_d6) = opval;
---
>     USI opval = SLLSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
468c418
<   CASE (sem, INSN_L_ADDC32) : /* l.addc32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_LSR) : /* l.lsr ${xdest},${xsrc1},${xsrc2} */
472c422
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
475c425
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
478,479c428,429
<     USI opval = ADDCSI (* FLD (i_a6), * FLD (i_b6), CPU (h_cf));
<     * FLD (i_d6) = opval;
---
>     USI opval = SRLSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
487c437
<   CASE (sem, INSN_L_SUBC32) : /* l.subc32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_MOV) : /* l.mov ${xdest},${xsrc1},${xsrc2} */
491c441
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
494c444
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
497,498c447,448
<     USI opval = SUBCSI (* FLD (i_a6), * FLD (i_b6), CPU (h_cf));
<     * FLD (i_d6) = opval;
---
>     USI opval = * FLD (i_xsrc1);
>     * FLD (i_xdest) = opval;
506c456
<   CASE (sem, INSN_L_JMP32) : /* l.jmp32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_JMP) : /* l.jmp ${xdest},${xsrc1},${xsrc2} */
510c460
< #define FLD(f) abuf->fields.sfmt_l_movi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_movi.f
514c464
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
517c467
<     USI opval = * FLD (i_d6);
---
>     USI opval = * FLD (i_xdest);
527c477
<   CASE (sem, INSN_L_JAL32) : /* l.jal32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_JAL) : /* l.jal ${xdest},${xsrc1},${xsrc2} */
531c481
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
---
> #define FLD(f) abuf->fields.sfmt_l_beq.f
534c484
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
537,538c487,488
<     USI opval = ADDSI (pc, 2);
<     * FLD (i_b6) = opval;
---
>     USI opval = ADDSI (pc, 1);
>     * FLD (i_xsrc2) = opval;
546c496
<   CASE (sem, INSN_L_JEQ32) : /* l.jeq32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_JEQ) : /* l.jeq ${xdest},${xsrc1},${xsrc2} */
550c500
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
554c504
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
556c506
< if (EQSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (EQSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
558c508
<     USI opval = * FLD (i_d6);
---
>     USI opval = * FLD (i_xdest);
565c515
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
578c528
<   CASE (sem, INSN_L_JNE32) : /* l.jne32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_JNE) : /* l.jne ${xdest},${xsrc1},${xsrc2} */
582c532
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
586c536
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
588c538
< if (NESI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (NESI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
590c540
<     USI opval = * FLD (i_d6);
---
>     USI opval = * FLD (i_xdest);
597c547
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
610c560
<   CASE (sem, INSN_L_JLTS32) : /* l.jlts32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_JLTS) : /* l.jlts ${xdest},${xsrc1},${xsrc2} */
614c564
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
618c568
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
620c570
< if (LTUSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (LTUSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
622c572
<     USI opval = * FLD (i_d6);
---
>     USI opval = * FLD (i_xdest);
629c579
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
642c592
<   CASE (sem, INSN_L_JLES32) : /* l.jles32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_JLES) : /* l.jles ${xdest},${xsrc1},${xsrc2} */
646c596
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
650c600
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
652c602
< if (LEUSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (LEUSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
654c604
<     USI opval = * FLD (i_d6);
---
>     USI opval = * FLD (i_xdest);
661c611
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
674c624
<   CASE (sem, INSN_L_JLTU32) : /* l.jltu32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_JLTU) : /* l.jltu ${xdest},${xsrc1},${xsrc2} */
678c628
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
682c632
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
684c634
< if (LTUUSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (LTUUSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
686c636
<     USI opval = * FLD (i_d6);
---
>     USI opval = * FLD (i_xdest);
693c643
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
706c656
<   CASE (sem, INSN_L_JLEU32) : /* l.jleu32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_JLEU) : /* l.jleu ${xdest},${xsrc1},${xsrc2} */
710c660
< #define FLD(f) abuf->fields.sfmt_l_asr32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
714c664
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
716c666
< if (LEUUSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (LEUUSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
718c668
<     USI opval = * FLD (i_d6);
---
>     USI opval = * FLD (i_xdest);
725c675
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
738c688
<   CASE (sem, INSN_L_JMPL32) : /* l.jmpl32 ${d6},${a6},${b6} */
---
>   CASE (sem, INSN_L_RTE) : /* l.rte ${xdest},${xsrc1},${xsrc2} */
742c692
< #define FLD(f) abuf->fields.sfmt_l_jmpl32.f
---
> #define FLD(f) abuf->fields.sfmt_l_movi.f
745,935c695,696
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ADDSI (* FLD (i_d6), 1);
<     * FLD (i_dest1) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_JALL32) : /* l.jall32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ADDSI (pc, 2);
<     * FLD (i_b6) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_JEQL32) : /* l.jeql32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_jmpl32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ADDSI (* FLD (i_d6), 1);
<     * FLD (i_dest1) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_JNEL32) : /* l.jnel32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_jmpl32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ADDSI (* FLD (i_d6), 1);
<     * FLD (i_dest1) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_JLTSL32) : /* l.jltsl32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_jmpl32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ADDSI (* FLD (i_d6), 1);
<     * FLD (i_dest1) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_JLESL32) : /* l.jlesl32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_jmpl32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ADDSI (* FLD (i_d6), 1);
<     * FLD (i_dest1) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_JLTUL32) : /* l.jltul32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_jmpl32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ADDSI (* FLD (i_d6), 1);
<     * FLD (i_dest1) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_JLEUL32) : /* l.jleul32 ${d6},${a6},${b6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_jmpl32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = ADDSI (* FLD (i_d6), 1);
<     * FLD (i_dest1) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_ASRI32) : /* l.asri32 ${d6},${a6},${i6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_asri32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = SRLSI (ORSI (* FLD (i_a6), SLLBI (CPU (h_cf), 16)), FLD (f_i_6));
<     * FLD (i_d6) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_LSLI32) : /* l.lsli32 ${d6},${a6},${i6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_asri32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
< 
<   {
<     USI opval = SLLSI (* FLD (i_a6), FLD (f_i_6));
<     * FLD (i_d6) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
<   }
< 
< #undef FLD
< }
<   NEXT (vpc);
< 
<   CASE (sem, INSN_L_LSRI32) : /* l.lsri32 ${d6},${a6},${i6} */
< {
<   SEM_ARG sem_arg = SEM_SEM_ARG (vpc, sc);
<   ARGBUF *abuf = SEM_ARGBUF (sem_arg);
< #define FLD(f) abuf->fields.sfmt_l_asri32.f
<   int UNUSED written = 0;
<   IADDR UNUSED pc = abuf->addr;
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   SEM_BRANCH_INIT
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
938,940c699,701
<     USI opval = SRLSI (* FLD (i_a6), FLD (f_i_6));
<     * FLD (i_d6) = opval;
<     TRACE_RESULT (current_cpu, abuf, "gpr", 'x', opval);
---
>     USI opval = * FLD (i_xdest);
>     SEM_BRANCH_VIA_ADDR (current_cpu, sem_arg, opval, vpc);
>     TRACE_RESULT (current_cpu, abuf, "pc", 'x', opval);
942a704
>   SEM_BRANCH_FINI (vpc);
947c709
<   CASE (sem, INSN_L_ANDI32) : /* l.andi32 ${d6},${a6},${i10i} */
---
>   CASE (sem, INSN_L_ADDI) : /* l.addi ${xdest},${xsrc1},${uint023} */
951c713
< #define FLD(f) abuf->fields.sfmt_l_andi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asri.f
954c716
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
957,958c719,720
<     USI opval = ANDSI (* FLD (i_a6), FLD (f_i_10i));
<     * FLD (i_d6) = opval;
---
>     USI opval = ADDSI (* FLD (i_xsrc1), FLD (f_uint_2_3));
>     * FLD (i_xdest) = opval;
966c728
<   CASE (sem, INSN_L_ORI32) : /* l.ori32 ${d6},${a6},${i10i} */
---
>   CASE (sem, INSN_L_SUBI) : /* l.subi ${xdest},${xsrc1},${uint023} */
970c732
< #define FLD(f) abuf->fields.sfmt_l_andi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asri.f
973c735
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
976,977c738,739
<     USI opval = ORSI (* FLD (i_a6), FLD (f_i_10i));
<     * FLD (i_d6) = opval;
---
>     USI opval = SUBSI (* FLD (i_xsrc1), FLD (f_uint_2_3));
>     * FLD (i_xdest) = opval;
985c747
<   CASE (sem, INSN_L_XORI32) : /* l.xori32 ${d6},${a6},${i10i} */
---
>   CASE (sem, INSN_L_ASRI) : /* l.asri ${xdest},${xsrc1},${uint023} */
989c751
< #define FLD(f) abuf->fields.sfmt_l_andi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asri.f
992c754
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
995,996c757,758
<     USI opval = XORSI (* FLD (i_a6), FLD (f_i_10i));
<     * FLD (i_d6) = opval;
---
>     USI opval = SRLSI (ORSI (* FLD (i_xsrc1), SLLBI (CPU (h_cf), 16)), FLD (f_uint_2_3));
>     * FLD (i_xdest) = opval;
1004c766
<   CASE (sem, INSN_L_ADDI32) : /* l.addi32 ${d6},${a6},${i10} */
---
>   CASE (sem, INSN_L_LSLI) : /* l.lsli ${xdest},${xsrc1},${uint023} */
1008c770
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
1011c773
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1014,1015c776,777
<     USI opval = ADDSI (* FLD (i_a6), FLD (f_i_10));
<     * FLD (i_d6) = opval;
---
>     USI opval = SLLSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
1023c785
<   CASE (sem, INSN_L_SUBI32) : /* l.subi32 ${d6},${a6},${i10} */
---
>   CASE (sem, INSN_L_LSRI) : /* l.lsri ${xdest},${xsrc1},${uint023} */
1027c789
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_asr.f
1030c792
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1033,1034c795,796
<     USI opval = SUBSI (* FLD (i_a6), FLD (f_i_10));
<     * FLD (i_d6) = opval;
---
>     USI opval = SRLSI (* FLD (i_xsrc1), * FLD (i_xsrc2));
>     * FLD (i_xdest) = opval;
1042c804
<   CASE (sem, INSN_L_BEQ32) : /* l.beq32 ${s10},${a6},${b6} */
---
>   CASE (sem, INSN_L_BEQ) : /* l.beq ${int083},${xsrc1},${xsrc2} */
1046c808
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
---
> #define FLD(f) abuf->fields.sfmt_l_beq.f
1050c812
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1052c814
< if (EQSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (EQSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
1054c816
<     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_s_10))));
---
>     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_int_8_3))));
1061c823
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
1074c836
<   CASE (sem, INSN_L_BNE32) : /* l.bne32 ${s10},${a6},${b6} */
---
>   CASE (sem, INSN_L_BNE) : /* l.bne ${int083},${xsrc1},${xsrc2} */
1078c840
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
---
> #define FLD(f) abuf->fields.sfmt_l_beq.f
1082c844
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1084c846
< if (NESI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (NESI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
1086c848
<     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_s_10))));
---
>     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_int_8_3))));
1093c855
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
1106c868
<   CASE (sem, INSN_L_BLTS32) : /* l.blts32 ${s10},${a6},${b6} */
---
>   CASE (sem, INSN_L_BLTS) : /* l.blts ${int083},${xsrc1},${xsrc2} */
1110c872
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
---
> #define FLD(f) abuf->fields.sfmt_l_beq.f
1114c876
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1116c878
< if (LTUSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (LTUSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
1118c880
<     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_s_10))));
---
>     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_int_8_3))));
1125c887
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
1138c900
<   CASE (sem, INSN_L_BLES32) : /* l.bles32 ${s10},${a6},${b6} */
---
>   CASE (sem, INSN_L_BLES) : /* l.bles ${int083},${xsrc1},${xsrc2} */
1142c904
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
---
> #define FLD(f) abuf->fields.sfmt_l_beq.f
1146c908
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1148c910
< if (LEUSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (LEUSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
1150c912
<     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_s_10))));
---
>     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_int_8_3))));
1157c919
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
1170c932
<   CASE (sem, INSN_L_BLTU32) : /* l.bltu32 ${s10},${a6},${b6} */
---
>   CASE (sem, INSN_L_BLTU) : /* l.bltu ${int083},${xsrc1},${xsrc2} */
1174c936
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
---
> #define FLD(f) abuf->fields.sfmt_l_beq.f
1178c940
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1180c942
< if (LTUUSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (LTUUSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
1182c944
<     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_s_10))));
---
>     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_int_8_3))));
1189c951
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
1202c964
<   CASE (sem, INSN_L_BLEU32) : /* l.bleu32 ${s10},${a6},${b6} */
---
>   CASE (sem, INSN_L_BLEU) : /* l.bleu ${int083},${xsrc1},${xsrc2} */
1206c968
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
---
> #define FLD(f) abuf->fields.sfmt_l_beq.f
1210c972
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1212c974
< if (LEUUSI (* FLD (i_a6), * FLD (i_b6))) {
---
> if (LEUUSI (* FLD (i_xsrc1), * FLD (i_xsrc2))) {
1214c976
<     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_s_10))));
---
>     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_int_8_3))));
1221c983
<     USI opval = ADDSI (pc, 2);
---
>     USI opval = ADDSI (pc, 1);
1234c996
<   CASE (sem, INSN_L_LDB32___D6_____A6____I10__) : /* l.ldb32 ${d6},(${a6},${i10}) */
---
>   CASE (sem, INSN_L_LDB___XDEST_____XSRC1____INT023__) : /* l.ldb ${xdest},(${xsrc1},${int023}) */
1238c1000
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1241c1003
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1244,1245c1006,1007
<     USI opval = GETMEMQI (current_cpu, pc, ADDSI (* FLD (i_a6), EXTHISI (TRUNCSIHI (FLD (f_i_10)))));
<     * FLD (i_d6) = opval;
---
>     USI opval = GETMEMQI (current_cpu, pc, ADDSI (* FLD (i_xsrc1), EXTHISI (TRUNCSIHI (FLD (f_int_2_3)))));
>     * FLD (i_xdest) = opval;
1253c1015
<   CASE (sem, INSN_L_LDW32___D6_____A6____I10__) : /* l.ldw32 ${d6},(${a6},${i10}) */
---
>   CASE (sem, INSN_L_LDW___XDEST_____XSRC1____INT023__) : /* l.ldw ${xdest},(${xsrc1},${int023}) */
1257c1019
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1260c1022
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1263,1264c1025,1026
<     USI opval = ORQI (GETMEMQI (current_cpu, pc, ADDSI (* FLD (i_a6), EXTHISI (TRUNCSIHI (FLD (f_i_10))))), SLLQI (GETMEMQI (current_cpu, pc, ADDCSI (* FLD (i_a6), EXTHISI (TRUNCSIHI (FLD (f_i_10))), 1)), 8));
<     * FLD (i_d6) = opval;
---
>     USI opval = ORQI (GETMEMQI (current_cpu, pc, ADDCSI (* FLD (i_xsrc1), EXTHISI (TRUNCSIHI (FLD (f_int_2_3))), 1)), SLLQI (GETMEMQI (current_cpu, pc, ADDSI (* FLD (i_xsrc1), EXTHISI (TRUNCSIHI (FLD (f_int_2_3))))), 8));
>     * FLD (i_xdest) = opval;
1272c1034
<   CASE (sem, INSN_L_LDB32___D6_____A6_____I10__) : /* l.ldb32 ${d6},(${a6}+,${i10}) */
---
>   CASE (sem, INSN_L_LDB___XDEST_____XSRC1_____INT023__) : /* l.ldb ${xdest},(${xsrc1}+,${int023}) */
1276c1038
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1279c1041
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1282,1283c1044,1045
<     USI opval = GETMEMQI (current_cpu, pc, ADDSI (* FLD (i_a6), EXTHISI (TRUNCSIHI (FLD (f_i_10)))));
<     * FLD (i_d6) = opval;
---
>     USI opval = GETMEMQI (current_cpu, pc, ADDSI (* FLD (i_xsrc1), EXTHISI (TRUNCSIHI (FLD (f_int_2_3)))));
>     * FLD (i_xdest) = opval;
1291c1053
<   CASE (sem, INSN_L_LDW32___D6_____A6_____I10__) : /* l.ldw32 ${d6},(${a6}+,${i10}) */
---
>   CASE (sem, INSN_L_LDW___XDEST_____XSRC1_____INT023__) : /* l.ldw ${xdest},(${xsrc1}+,${int023}) */
1295c1057
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1298c1060
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1301,1302c1063,1064
<     USI opval = ORQI (GETMEMQI (current_cpu, pc, ADDSI (* FLD (i_a6), EXTHISI (TRUNCSIHI (FLD (f_i_10))))), SLLQI (GETMEMQI (current_cpu, pc, ADDCSI (* FLD (i_a6), EXTHISI (TRUNCSIHI (FLD (f_i_10))), 1)), 8));
<     * FLD (i_d6) = opval;
---
>     USI opval = ORQI (GETMEMQI (current_cpu, pc, ADDCSI (* FLD (i_xsrc1), EXTHISI (TRUNCSIHI (FLD (f_int_2_3))), 1)), SLLQI (GETMEMQI (current_cpu, pc, ADDSI (* FLD (i_xsrc1), EXTHISI (TRUNCSIHI (FLD (f_int_2_3))))), 8));
>     * FLD (i_xdest) = opval;
1310c1072
<   CASE (sem, INSN_L_LDB32___D6______A6____I10__) : /* l.ldb32 ${d6},(-${a6},${i10}) */
---
>   CASE (sem, INSN_L_LDB___XDEST______XSRC1____INT023__) : /* l.ldb ${xdest},(-${xsrc1},${int023}) */
1314c1076
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1317c1079
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1320,1321c1082,1083
<     USI opval = SUBSI (* FLD (i_a6), EXTHISI (TRUNCSIHI (FLD (f_i_10))));
<     * FLD (i_a6) = opval;
---
>     USI opval = SUBSI (* FLD (i_xsrc1), EXTHISI (TRUNCSIHI (FLD (f_int_2_3))));
>     * FLD (i_xsrc1) = opval;
1329c1091
<   CASE (sem, INSN_L_LDW32___D6______A6____I10__) : /* l.ldw32 ${d6},(-${a6},${i10}) */
---
>   CASE (sem, INSN_L_LDW___XDEST______XSRC1____INT023__) : /* l.ldw ${xdest},(-${xsrc1},${int023}) */
1333c1095
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1336c1098
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1339,1340c1101,1102
<     USI opval = ADDSI (* FLD (i_a6), EXTHISI (TRUNCSIHI (FLD (f_i_10))));
<     * FLD (i_a6) = opval;
---
>     USI opval = SUBSI (* FLD (i_xsrc1), EXTHISI (TRUNCSIHI (FLD (f_int_2_3))));
>     * FLD (i_xsrc1) = opval;
1348c1110
<   CASE (sem, INSN_L_SDB32____D6____I10_____A6_) : /* l.sdb32 (${d6},${i10}),${a6} */
---
>   CASE (sem, INSN_L_SDB____XDEST____INT023_____XSRC1_) : /* l.sdb (${xdest},${int023}),${xsrc1} */
1352c1114
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1355c1117
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1358,1359c1120,1121
<     QI opval = ANDSI (* FLD (i_a6), 255);
<     SETMEMQI (current_cpu, pc, ADDSI (* FLD (i_d6), EXTHISI (TRUNCSIHI (FLD (f_i_10)))), opval);
---
>     QI opval = ANDSI (* FLD (i_xsrc1), 255);
>     SETMEMQI (current_cpu, pc, ADDSI (* FLD (i_xdest), EXTHISI (TRUNCSIHI (FLD (f_int_2_3)))), opval);
1367c1129
<   CASE (sem, INSN_L_SDW32____D6____I10_____A6_) : /* l.sdw32 (${d6},${i10}),${a6} */
---
>   CASE (sem, INSN_L_SDW____XDEST____INT023_____XSRC1_) : /* l.sdw (${xdest},${int023}),${xsrc1} */
1371c1133
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1374c1136
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1377,1378c1139,1140
<     QI opval = ANDSI (* FLD (i_a6), 255);
<     SETMEMQI (current_cpu, pc, ADDSI (* FLD (i_d6), EXTHISI (TRUNCSIHI (FLD (f_i_10)))), opval);
---
>     QI opval = ANDSI (* FLD (i_xsrc1), 255);
>     SETMEMQI (current_cpu, pc, ADDSI (* FLD (i_xdest), EXTHISI (TRUNCSIHI (FLD (f_int_2_3)))), opval);
1386c1148
<   CASE (sem, INSN_L_SDB32____D6_____I10_____A6_) : /* l.sdb32 (${d6}+,${i10}),${a6} */
---
>   CASE (sem, INSN_L_SDB____XDEST_____INT023_____XSRC1_) : /* l.sdb (${xdest}+,${int023}),${xsrc1} */
1390c1152
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1393c1155
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1396,1397c1158,1159
<     QI opval = ANDSI (* FLD (i_a6), 255);
<     SETMEMQI (current_cpu, pc, ADDSI (* FLD (i_d6), EXTHISI (TRUNCSIHI (FLD (f_i_10)))), opval);
---
>     QI opval = ANDSI (* FLD (i_xsrc1), 255);
>     SETMEMQI (current_cpu, pc, ADDSI (* FLD (i_xdest), EXTHISI (TRUNCSIHI (FLD (f_int_2_3)))), opval);
1405c1167
<   CASE (sem, INSN_L_SDW32____D6_____I10_____A6_) : /* l.sdw32 (${d6}+,${i10}),${a6} */
---
>   CASE (sem, INSN_L_SDW____XDEST_____INT023_____XSRC1_) : /* l.sdw (${xdest}+,${int023}),${xsrc1} */
1409c1171
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_ldb___xdest_____xsrc1____int023__.f
1412c1174
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1415,1416c1177,1178
<     QI opval = ANDSI (* FLD (i_a6), 255);
<     SETMEMQI (current_cpu, pc, ADDSI (* FLD (i_d6), EXTHISI (TRUNCSIHI (FLD (f_i_10)))), opval);
---
>     QI opval = ANDSI (* FLD (i_xsrc1), 255);
>     SETMEMQI (current_cpu, pc, ADDSI (* FLD (i_xdest), EXTHISI (TRUNCSIHI (FLD (f_int_2_3)))), opval);
1424c1186
<   CASE (sem, INSN_L_SDB32_____D6____I10_____A6_) : /* l.sdb32 (-${d6},${i10}),${a6} */
---
>   CASE (sem, INSN_L_SDB_____XDEST____INT023_____XSRC1_) : /* l.sdb (-${xdest},${int023}),${xsrc1} */
1428c1190
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_sdb_____xdest____int023_____xsrc1_.f
1431c1193
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1434c1196
<     USI opval = SUBSI (* FLD (i_d6), EXTHISI (TRUNCSIHI (FLD (f_i_10))));
---
>     USI opval = SUBSI (* FLD (i_d6), EXTHISI (TRUNCSIHI (FLD (f_int_2_3))));
1443c1205
<   CASE (sem, INSN_L_SDW32_____D6____I10_____A6_) : /* l.sdw32 (-${d6},${i10}),${a6} */
---
>   CASE (sem, INSN_L_SDW_____XDEST____INT023_____XSRC1_) : /* l.sdw (-${xdest},${int023}),${xsrc1} */
1447c1209
< #define FLD(f) abuf->fields.sfmt_l_addi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_sdb_____xdest____int023_____xsrc1_.f
1450c1212
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1453c1215
<     USI opval = SUBSI (* FLD (i_d6), EXTHISI (TRUNCSIHI (FLD (f_i_10))));
---
>     USI opval = SUBSI (* FLD (i_d6), EXTHISI (TRUNCSIHI (FLD (f_int_2_3))));
1462c1224
<   CASE (sem, INSN_L_NOP32) : /* l.nop32 ${d6},${i12} */
---
>   CASE (sem, INSN_L_NOP) : /* l.nop ${xdest},${uint056} */
1469c1231
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1477c1239
<   CASE (sem, INSN_L_MOVI32) : /* l.movi32 ${d6},${i16} */
---
>   CASE (sem, INSN_L_MOVI) : /* l.movi ${xdest},${uint056} */
1481c1243
< #define FLD(f) abuf->fields.sfmt_l_movi32.f
---
> #define FLD(f) abuf->fields.sfmt_l_movi.f
1484c1246
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1487,1488c1249,1250
<     USI opval = FLD (f_i_16);
<     * FLD (i_d6) = opval;
---
>     USI opval = FLD (f_uint_5_6);
>     * FLD (i_xdest) = opval;
1496c1258
<   CASE (sem, INSN_L_BAL32) : /* l.bal32 ${s16},${b6} */
---
>   CASE (sem, INSN_L_BAL) : /* l.bal ${int086},${xsrc2} */
1500c1262
< #define FLD(f) abuf->fields.sfmt_l_beq32.f
---
> #define FLD(f) abuf->fields.sfmt_l_beq.f
1503c1265
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1506,1507c1268,1269
<     USI opval = ADDSI (pc, 2);
<     * FLD (i_b6) = opval;
---
>     USI opval = ADDSI (pc, 1);
>     * FLD (i_xsrc2) = opval;
1515c1277
<   CASE (sem, INSN_L_BRA32) : /* l.bra32 ${s22} */
---
>   CASE (sem, INSN_L_BRA) : /* l.bra ${int089} */
1519c1281
< #define FLD(f) abuf->fields.sfmt_l_bra32.f
---
> #define FLD(f) abuf->fields.sfmt_l_bra.f
1523c1285
<   vpc = SEM_NEXT_VPC (sem_arg, pc, 4);
---
>   vpc = SEM_NEXT_VPC (sem_arg, pc, 2);
1526c1288
<     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_s_22))));
---
>     USI opval = ADDSI (pc, EXTHISI (TRUNCSIHI (FLD (f_int_8_9))));
