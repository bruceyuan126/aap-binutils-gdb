;; AAP cpu thing: need to tell cgen the registers and ISA



(include "simplify.inc")

;;
;; define-architure must appear first
;;
(define-arch
  (name aap)	;; name of cpu architecture
  (comment "AAP")
  (insn-lsb0? #t)
  (machs aap)	;; list of machines
  (isas aap)  	;; isa name
)

(define-isa
  (name aap)
  (default-insn-word-bitsize 32)
  (default-insn-bitsize 32)
  (base-insn-bitsize 32)
)

;;
;; Cpu family definitions.
;;
(define-cpu
  ;; cpu names must be distinct from the architecture name and machine names.
  ;; The "b" suffix stands for "base" and is the convention.
  ;; The "f" suffix stands for "family" and is the convention.
  (name aapbf)
  (comment "AAP base family")
  (endian little)
  (word-bitsize 32)
)
;;
;; Generic AAP machine. Supports the entire architecture
;;
(define-mach
  (name aap)
  (comment "Generic AAP machine")
  (cpu aapbf)
  (isas aap)
)
(define-model
  (name aap)
  (comment "Generic AAP model")
  (mach aap)
  
  (unit u-exec "Execution Unit" ()
    1 1 ;; issue done
    () ;; state
    () ;; inputs
    () ;; outputs
    () ;; profile action (default)
    )
)

;;
;; Helper Macros (copied Andrew)
;;

(define-pmacro all-aap-isas () (ISA aap))

;;
;; Hardware (copied Andrew)
;;
(dnh h-gpr "General Purpose Registers"
  (all-aap-isas CACHE-ADDR)
  (register SI (64))	;; (regiser mode [(number)])
  (keyword ""(
    ($r0  0) ($r1  1) ($r2  2) ($r3  3) ($r4  4) ($r5  5) ($r6  6) ($r7  7)
    ($r8  8) ($r9  9) ($r10  10) ($r11  11) ($r12  12) ($r13  13) ($r14  14)
    ($r15  15) ($r16  16) ($r17  17) ($r18  18) ($r19  19) ($r20  20) ($r21  21)
    ($r22  22) ($r23  23) ($r24  24) ($r25  25) ($r26  26) ($r27  27) ($r28  28)
    ($r29  29) ($r30  30) ($r31  31) ($r32  32) ($r33  33) ($r34  34) ($r35  35)
    ($r36  36) ($r37  37) ($r38  38) ($r39  39) ($r40  40) ($r41  41) ($r42  42)
    ($r43  43) ($r44  44) ($r45  45) ($r46  46) ($r47  47) ($r48  48) ($r49  49)
    ($r50  50) ($r51  51) ($r52  52) ($r53  53) ($r54  54) ($r55  55) ($r56  56)
    ($r57  57) ($r58  58) ($r59  59) ($r60  60) ($r61  61) ($r62  62) ($r63  63)
    )
  )
  () ()
)

(dnh h-pc "program couner" (PC PROFILE) (pc) () () ())

;;
;; Instruction fields
;;
;; 0 CC OOOO DDD AAA BBB 0 00 0000 000 000 000
;; 0 CC OOOO DDD AAA III 0 00 0000 000 000 000
;; 0 CC OOOO SSS AAA BBB 0 00 0000 000 000 000
;; 0 CC OOOO DDD AAA SSS 0 00 0000 000 000 000
;; 0 CC OOOO DDD III III 0 00 0000 000 000 000
;; 0 CC OOOO SSS SSS BBB 0 00 0000 000 000 000
;; 0 CC OOOO SSS SSS SSS 0 00 0000 000 000 000
;;
;; 1 CC OOOO DDD AAA BBB 0 CC OOOO DDD AAA BBB
;; 1 CC OOOO DDD AAA III 0 CC OOOO DDD AAA III
;; 1 CC OOOO DDD AAA III 0 CC III1 DDD AAA III
;; 1 CC OOOO DDD AAA III 0 CC IIII DDD AAA III
;; 1 CC OOOO SSS AAA BBB 0 CC SSSS SSS AAA BBB

;; 1 CC OOOO DDD AAA SSS 0 CC SSSS DDD AAA SSS
;; 1 CC OOOO DDD III III 0 CC OOOO DDD III III
;; 1 CC OOOO DDD III III 0 CC IIII DDD III III
;; 1 CC OOOO SSS SSS BBB 0 CC SSSS SSS SSS BBB
;; 1 CC OOOO SSS SSS SSS 0 CC SSSS SSS SSS SSS

;;    name        comment                 macro   start length   (mode: UINT)
(dnf f-length "long insn bit (31-16)" (all-aap-isas) 31 1)
(dnf f-x-length "long insn bit (15-0)" (all-aap-isas) 15 1)

(dnf f-x-class "instruction class (15-0)" (all-aap-isas) 14 2)
(dnf f-opcode "instruction opcode & class (31-16)" (all-aap-isas) 30 6)
(dnf f-x-opcode "instruction opcode & class (15-0)" (all-aap-isas) 14 6)

(dnf f-dst-reg "destination register (31-16)" (all-aap-isas) 24 3)
(dnf f-x-dst-reg "destination register (15-0)" (all-aap-isas) 8 3)
(dnf f-src-reg-1 "source 1 register (31-16)" (all-aap-isas) 21 3)
(dnf f-x-src-reg-1 "source 1 register (15-0)" (all-aap-isas) 5 3)
(dnf f-src-reg-2 "source 2 register (31-16)" (all-aap-isas) 18 3)
(dnf f-x-src-reg-2 "source 2 register (15-0)" (all-aap-isas) 2 3)

(dnf f-blank "- -- ---- --- --- --- - 00 0000 000 000 000"
  (all-aap-isas) 14 15)

(df f-uint-18-3 "- -- ---- --- --- iii - -- ---- --- --- ---"
  (all-aap-isas) 18 3 UINT #f #f)
(df f-uint-21-6 "- -- ---- --- iii iii - -- ---- --- --- ---"
  (all-aap-isas) 21 6 UINT #f #f)
(df f-uint-12-4 "- -- ---- --- --- --- - -- iiii --- --- ---"
  (all-aap-isas) 12 4 UINT #f #f)
(df f-uint-iii1 "- -- ---- --- --- --- - -- iii1 --- --- ---"
  (all-aap-isas) 12 4 UINT #f #f)
(df f-uint-2-3 "- -- ---- --- --- --- - -- ---- --- --- iii"
  (all-aap-isas) 2 3 UINT #f #f)
(df f-uint-5-6 "- -- ---- --- --- --- - -- ---- --- iii iii"
  (all-aap-isas) 5 6 UINT #f #f)

(df f-int-18-3 "- -- ---- --- --- sss - -- ---- --- --- ---"
  (all-aap-isas) 18 3 INT #f #f)
(df f-int-24-9 "- -- ---- sss sss sss - -- ---- --- --- ---"
  (all-aap-isas) 24 9 INT #f #f)
(df f-int-24-6 "- -- ---- sss sss --- - -- ---- --- --- ---"
  (all-aap-isas) 24 6 INT #f #f)
(df f-int-24-3 "- -- ---- sss --- --- - -- ---- --- --- ---"
  (all-aap-isas) 24 3 INT #f #f)
(df f-int-12-4 "- -- ---- --- --- --- - -- ssss --- --- ---"
  (all-aap-isas) 12 4 INT #f #f)
(df f-int-2-3 "- -- ---- --- --- --- - -- ---- --- --- sss"
  (all-aap-isas) 2 3 INT #f #f)
(df f-int-8-3 "- -- ---- --- --- --- - -- ---- sss --- ---"
  (all-aap-isas) 8 3 INT #f #f)
(df f-int-8-6 "- -- ---- --- --- --- - -- ---- sss sss ---"
  (all-aap-isas) 8 6 INT #f #f)
(df f-int-8-9 "- -- ---- --- --- --- - -- ---- sss sss sss"
  (all-aap-isas) 8 9 INT #f #f)

;;
;; Enum
;;
(define-normal-insn-enum
  length1 "length" () LEN1_ f-length
  (("16" 0)
   ("32" 1))
)
;; f-x-length is always 0
(define-normal-insn-enum
  length2 "x_length" () LEN2_ f-x-length
  (("0" 0)
  ("ERROR" 1))
)

(define-normal-insn-enum
  opcodes1 "opcodes" () OP1_ f-opcode
  (("NOP" 0)
   ("ADD" 1)
   ("SUB" 2)
   ("AND" 3)
   ("OR"  4)
   ("XOR" 5)
   ("ASR" 6)
   ("LSL" 7)
   ("LSR" 8)
   ("MOV" 9)
   ("ADDI" 10)
   ("SUBI" 11)
   ("ASRI" 12)
   ("LSLI" 13)
   ("LSRI" 14)
   ("MOVI" 15)
   ("LDB" 16)
   ("LDW" 20)
   ("LDBPO" 17)
   ("LDWPO" 21)
   ("LDBPR" 18)
   ("LDWPR" 22)
   ("SDB" 24)
   ("SDW" 28)
   ("SDBPO" 25)
   ("SDWPO" 29)
   ("SDBPR" 26)
   ("SDWPR" 30)
   ("BRA" 32)
   ("BAL" 33)
   ("BEQ" 34)
   ("BNE" 35)
   ("BLTS" 36)
   ("BLES" 37)
   ("BLTU" 38)
   ("BLEU" 39)
   ("JMP" 40)
   ("JAL" 41)
   ("JEQ" 42)
   ("JNE" 43)
   ("JLTS" 44)
   ("JLES" 45)
   ("JLTU" 46)
   ("JLEU" 47)
   ("RD" 48)
  )
)

(define-normal-insn-enum
  opcodes2 "opcodes2" () OP2_ f-x-opcode
  (("NOP" 0)
   ("ADD" 1)
  )
)

(define-normal-insn-enum
  xclass "xclass" () CLA_ f-x-class
  (("NOP" 0)
   ("ERROR" 1))
)

;; f-blank is always 0
(define-normal-insn-enum
  blank "blank" () BLA_ f-blank
  (("00" 0) ;;00 0000 000 000 000
  ("ERROR" 1))
)

;;
;; Single Field operands
;;
;; Registers (type: h-gpr)
(define-operand
  (name dest)
  (comment "dest")
  (type h-gpr)
  (index f-dst-reg)
)
(define-operand
  (name src1)
  (comment "src1")
  (type h-gpr)
  (index f-src-reg-1)
)
(define-operand
  (name src2)
  (comment "src2")
  (type h-gpr)
  (index f-src-reg-2)
)
(define-operand
  (name xdest)
  (comment "xdest")
  (type h-gpr)
  (index f-x-dst-reg)
)
(define-operand
  (name xsrc1)
  (comment "xsrc1")
  (type h-gpr)
  (index f-x-src-reg-1)
)
(define-operand
  (name xsrc2)
  (comment "xsrc2")
  (type h-gpr)
  (index f-x-src-reg-2)
)

;; Numbers unsigned (h-uint)
(define-operand
  (name uint216)
  (comment "uint 21 6")
  (type h-uint)
  (index f-uint-21-6)
)
(define-operand
  (name uint183)
  (comment "uint 18 3")
  (type h-uint)
  (index f-uint-18-3)
)
(define-operand
  (name uint124)
  (comment "uint 12 4")
  (type h-uint)
  (index f-uint-12-4)
)
(define-operand
  (name uint056)
  (comment "uint 5 6")
  (type h-uint)
  (index f-uint-5-6)
)
(define-operand
  (name uint023)
  (comment "uint 2 3")
  (type h-uint)
  (index f-uint-2-3)
)
(define-operand
  (name uintiii1)
  (comment "uint iii1")
  (type h-uint)
  (index f-uint-iii1)
)

;; Numbers signed (h-sint)
(define-operand
  (name int243)
  (comment "sint 24 3")
  (type h-sint)
  (index f-int-24-3)
)
(define-operand
  (name int246)
  (comment "int 24 6")
  (type h-sint)
  (index f-int-24-6)
)
(define-operand
  (name int249)
  (comment "int 24 9")
  (type h-sint)
  (index f-int-24-9)
)
(define-operand
  (name int183)
  (comment "int 18 3")
  (type h-sint)
  (index f-int-18-3)
)
(define-operand
  (name int124)
  (comment "int 12 4")
  (type h-sint)
  (index f-int-12-4)
)
(define-operand
  (name int083)
  (comment "int 8 3")
  (type h-sint)
  (index f-int-8-3)
)
(define-operand
  (name int086)
  (comment "int 8 6")
  (type h-sint)
  (index f-int-8-6)
)
(define-operand
  (name int089)
  (comment "int 8 9")
  (type h-sint)
  (index f-int-8-9)
)
(define-operand
  (name int023)
  (comment "int 2 3")
  (type h-sint)
  (index f-int-2-3)
)

;;
;; Instruction macros
;;
;; Format 1
(define-pmacro (aap-format-1 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${src1},${src2}"))
      (format (.splice + LEN1_16 (f-opcode opcode) dest src1 src2 LEN2_0 BLA_00))
    )
  )
)
;; Format 2
(define-pmacro (aap-format-2 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${src1},${uint183}"))
      (format (.splice + LEN1_16 (f-opcode opcode) dest src1 uint183 LEN2_0 BLA_00))
    )
  )
)
;; Format 3
(define-pmacro (aap-format-3 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${int243},${src1},${src2}"))
      (format (.splice + LEN1_16 (f-opcode opcode) int243 src1 src2 LEN2_0 BLA_00))
    )
  )
)
;; Format 4
(define-pmacro (aap-format-4 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${src1},${int183}"))
      (format (.splice + LEN1_16 (f-opcode opcode) dest src1 int183 LEN2_0 BLA_00))
    )
  )
)
;; Format 5
(define-pmacro (aap-format-5 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${uint216}"))
      (format (.splice + LEN1_16 (f-opcode opcode) dest uint216 LEN2_0 BLA_00))
    )
  )
)
;; Format 6
(define-pmacro (aap-format-6 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${int246},${src2}"))
      (format (.splice + LEN1_16 (f-opcode opcode) int246 src2 LEN2_0 BLA_00))
    )
  )
)
;; Format 7
(define-pmacro (aap-format-7 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${int249}"))
      (format (.splice + LEN1_16 (f-opcode opcode) int249 LEN2_0 BLA_00))
    )
  )
)
;; Format 8
(define-pmacro (aap-format-8 mnemonic opcode0 opcode1)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${src1},${src2},${xdest},${xsrc1},${xsrc2}"))
      (format (.splice + LEN1_32 (f-opcode opcode0) dest src1 src2
      	      	       	 LEN2_0 (f-x-opcode opcode1) xdest xsrc1 xsrc2))
    )
  )
)
;; Format 9
(define-pmacro (aap-format-9 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${src1},${uint183},${xdest},${xsrc1},${uint023}"))
      (format (.splice + LEN1_32 (f-opcode opcode) dest src1 uint183
      	      	       	 LEN2_0 OP2_NOP xdest xsrc1 uint023))
    )
  )
)
;; Format 10
(define-pmacro (aap-format-10 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${src1},${uint183},${uintiii1},${xdest},${xsrc1},${uint023}"))
      (format (.splice + LEN1_32 (f-opcode opcode) dest src1 uint183
      	      	       	 LEN2_0 CLA_NOP uintiii1 xdest xsrc1 uint023))
    )
  )
)
;; Format 11
(define-pmacro (aap-format-11 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${src1},${uint183},${uint124},${xdest},${xsrc1},${uint023}"))
      (format (.splice + LEN1_32 (f-opcode opcode) dest src1 uint183
      	      	       	 LEN2_0 CLA_NOP uint124 xdest xsrc1 uint023))
    )
  )
)
;; Format 12
(define-pmacro (aap-format-12 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${int243},${src1},${src2},${int124},${int083},${xsrc1},${xsrc2}"))
      (format (.splice + LEN1_32 (f-opcode opcode) int243 src1 src2
      	      	       	 LEN2_0 CLA_NOP int124 int083 xsrc1 xsrc2))
    )
  )
)
;; Format 13
(define-pmacro (aap-format-13 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${src1},${uint183},${uint124},${xdest},${xsrc1},${uint023}"))
      (format (.splice + LEN1_32 (f-opcode opcode) dest src1 int183
      	      	       	 LEN2_0 CLA_NOP int124 xdest xsrc1 int023))
    )
  )
)
;; Format 14
(define-pmacro (aap-format-14 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${uint216},${xdest},${uint056}"))
      (format (.splice + LEN1_32 (f-opcode opcode) dest uint216
      	      	       	 LEN2_0 OP2_NOP xdest uint056))
    )
  )
)
;; Format 15
(define-pmacro (aap-format-15 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${dest},${uint216},${uint124},${xdest},${uint056}"))
      (format (.splice + LEN1_32 (f-opcode opcode) dest uint216
      	      	       	 LEN2_0 CLA_NOP uint124 xdest uint056))
    )
  )
)
;; Format 16
(define-pmacro (aap-format-16 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${int246},${src2},${int124},${int086},${xsrc2}"))
      (format (.splice + LEN1_32 (f-opcode opcode) int246 src2
      	      	       	 LEN2_0 CLA_NOP int124 int086 xsrc2))
    )
  )
)
;; Format 17
(define-pmacro (aap-format-17 mnemonic opcode)
  (begin
    (define-insn
      (name (.sym mnemonic))
      (comment (.str mnemonic))
      (attrs all-aap-isas)
      (syntax (.str mnemonic " ${int249},${int124},${int089}"))
      (format (.splice + LEN1_32 (f-opcode opcode) int249
      	      	       	 LEN2_0 CLA_NOP int124 int089 ))
    )
  )
)


;;
;; Instructions
;;
;; Format 1
(aap-format-1 "l.add" OP1_ADD)
(aap-format-1 "l.sub" OP1_SUB)
(aap-format-1 "l.and" OP1_AND)
(aap-format-1 "l.or"  OP1_OR)
(aap-format-1 "l.xor" OP1_XOR)
(aap-format-1 "l.asr" OP1_ASR)
(aap-format-1 "l.lsl" OP1_LSL)
(aap-format-1 "l.lsr" OP1_LSR)
(aap-format-1 "l.mov" OP1_MOV)
(aap-format-1 "l.jmp" OP1_JMP)
(aap-format-1 "l.jal" OP1_JAL)
(aap-format-1 "l.jeq" OP1_JEQ)
(aap-format-1 "l.jne" OP1_JNE)
(aap-format-1 "l.jlts" OP1_JLTS)
(aap-format-1 "l.jles" OP1_JLES)
(aap-format-1 "l.jltu" OP1_JLTU)
(aap-format-1 "l.jleu" OP1_JLEU)
(aap-format-1 "l.rd"  OP1_RD)

;; Format 2
(aap-format-2 "l.addi" OP1_ADDI)
(aap-format-2 "l.subi" OP1_SUBI)
(aap-format-2 "l.asri" OP1_ASRI)
(aap-format-2 "l.lsli" OP1_LSLI)
(aap-format-2 "l.lsri" OP1_LSRI)

;; Format 3
(aap-format-3 "l.beq" OP1_BEQ)
(aap-format-3 "l.bne" OP1_BNE)
(aap-format-3 "l.blts" OP1_BLTS)
(aap-format-3 "l.bles" OP1_BLES)
(aap-format-3 "l.bltu" OP1_BLTU)
(aap-format-3 "l.bleu" OP1_BLEU)

;; Format 4
(aap-format-4 "l.ldb" OP1_LDB)
(aap-format-4 "l.ldw" OP1_LDW)
(aap-format-4 "l.ldbpo" OP1_LDBPO)
(aap-format-4 "l.ldwpo" OP1_LDWPO)
(aap-format-4 "l.ldbpr" OP1_LDBPR)
(aap-format-4 "l.ldwpr" OP1_LDWPR)
(aap-format-4 "l.sdb" OP1_SDB)
(aap-format-4 "l.sdw" OP1_SDW)
(aap-format-4 "l.sdbpo" OP1_SDBPO)
(aap-format-4 "l.sdwpo" OP1_SDWPO)
(aap-format-4 "l.sdbpr" OP1_SDBPR)
(aap-format-4 "l.sdwpr" OP1_SDWPR)

;; Format 5
(aap-format-5 "l.nop" OP1_NOP)
(aap-format-5 "l.movi" OP1_MOVI)

;; Format 6
(aap-format-6 "l.bal" OP1_BAL)

;; Format 7
(aap-format-7 "l.bra" OP1_BRA)

;; Format 8
(aap-format-8 "l.add32" OP1_ADD OP2_NOP)
(aap-format-8 "l.sub32" OP1_SUB OP2_NOP)
(aap-format-8 "l.and32" OP1_AND OP2_NOP)
(aap-format-8 "l.or32"  OP1_OR  OP2_NOP)
(aap-format-8 "l.xor32" OP1_XOR OP2_NOP)
(aap-format-8 "l.asr32" OP1_ASR OP2_NOP)
(aap-format-8 "l.lsl32" OP1_LSL OP2_NOP)
(aap-format-8 "l.lsr32" OP1_LSR OP2_NOP)
(aap-format-8 "l.mov32" OP1_MOV OP2_NOP)
(aap-format-8 "l.addc32" OP1_ADD OP2_ADD)
(aap-format-8 "l.subc32" OP1_SUB OP2_ADD)
(aap-format-8 "l.jmp32" OP1_JMP OP2_NOP)
(aap-format-8 "l.jal32" OP1_JAL OP2_NOP)
(aap-format-8 "l.jeq32" OP1_JEQ OP2_NOP)
(aap-format-8 "l.jne32" OP1_JNE OP2_NOP)
(aap-format-8 "l.jlts32" OP1_JLTS OP2_NOP)
(aap-format-8 "l.jles32" OP1_JLES OP2_NOP)
(aap-format-8 "l.jltu32" OP1_JLTU OP2_NOP)
(aap-format-8 "l.jleu32" OP1_JLEU OP2_NOP)
(aap-format-8 "l.jmpl32" OP1_JMP OP2_ADD)
(aap-format-8 "l.jall32" OP1_JAL OP2_ADD)
(aap-format-8 "l.jeql32" OP1_JEQ OP2_ADD)
(aap-format-8 "l.jnel32" OP1_JNE OP2_ADD)
(aap-format-8 "l.jltsl32" OP1_JLTS OP2_ADD)
(aap-format-8 "l.jlesl32" OP1_JLES OP2_ADD)
(aap-format-8 "l.jltul32" OP1_JLTU OP2_ADD)
(aap-format-8 "l.jleul32" OP1_JLEU OP2_ADD)

;; Format 9
(aap-format-9 "l.asri32" OP1_ASRI)
(aap-format-9 "l.lsli32" OP1_LSLI)
(aap-format-9 "l.lsri32" OP1_LSRI)

;; Format 10
(aap-format-10 "l.andi32" OP1_AND)
(aap-format-10 "l.ori32"  OP1_OR)
(aap-format-10 "l.xori32" OP1_XOR)

;; Format 11
(aap-format-11 "l.addi32" OP1_ADDI)
(aap-format-11 "l.subi32" OP1_SUBI)

;; Format 12
(aap-format-12 "l.beq32" OP1_BEQ)
(aap-format-12 "l.bne32" OP1_BNE)
(aap-format-12 "l.blts32" OP1_BLTS)
(aap-format-12 "l.bles32" OP1_BLES)
(aap-format-12 "l.bltu32" OP1_BLTU)
(aap-format-12 "l.bleu32" OP1_BLEU)

;; Format 13
(aap-format-13 "l.ldb32" OP1_LDB)
(aap-format-13 "l.ldw32" OP1_LDW)
(aap-format-13 "l.ldbpo32" OP1_LDBPO)
(aap-format-13 "l.ldwpo32" OP1_LDWPO)
(aap-format-13 "l.ldbpr32" OP1_LDBPR)
(aap-format-13 "l.ldwpr32" OP1_LDWPR)
(aap-format-13 "l.sdb32" OP1_SDB)
(aap-format-13 "l.sdw32" OP1_SDW)
(aap-format-13 "l.sdbpo32" OP1_SDBPO)
(aap-format-13 "l.sdwpo32" OP1_SDWPO)
(aap-format-13 "l.sdbpr32" OP1_SDBPR)
(aap-format-13 "l.sdwpr32" OP1_SDWPR)

;; Format 14
(aap-format-14 "l.nop32" OP1_NOP)

;; Format 15
(aap-format-15 "l.movi32" OP1_MOVI)

;; Format 16
(aap-format-16 "l.bal32" OP1_BAL)

;; Format 17
(aap-format-17 "l.bra32" OP1_BRA)